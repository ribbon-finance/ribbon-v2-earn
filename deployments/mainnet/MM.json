{
  "address": "0xBe278c980649E5Bc544FFa58e83933769Cd38a17",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_RIBBON_EARN_USDC_VAULT",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldMinProviderSwap",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMinProviderSwap",
          "type": "uint256"
        }
      ],
      "name": "MinProviderSwapSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "product",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "mmSpread",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "providerSpread",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "issueAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "redeemAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isWhitelisted",
          "type": "bool"
        }
      ],
      "name": "ProductSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromAsset",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toAsset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "name": "ProductSwapped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountInAsset",
          "type": "uint256"
        }
      ],
      "name": "Settled",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ORACLE_DIFF_THRESH_PCT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RIBBON_EARN_USDC_VAULT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_product",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "convertToProductAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_product",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "convertToUSDCAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minProviderSwap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pendingSettledAssetAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "products",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "mmSpread",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "providerSpread",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "issueAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "redeemAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isWhitelisted",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minProviderSwap",
          "type": "uint256"
        }
      ],
      "name": "setMinProviderSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_product",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_mmSpread",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_providerSpread",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_issueAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_redeemAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oracleAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isWhitelisted",
          "type": "bool"
        }
      ],
      "name": "setProduct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "settleTPlus0Transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_fromAsset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_toAsset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x85d0eb802c5ad6967b0b4aea7b6333fdf4e569e3dcec0d2934b87c669ad31c9d",
  "receipt": {
    "to": null,
    "from": "0xF8368119Bb1073Cf01B841848725d81b542A4c19",
    "contractAddress": "0xBe278c980649E5Bc544FFa58e83933769Cd38a17",
    "transactionIndex": 279,
    "gasUsed": "1473190",
    "logsBloom": "0x000000000000000000000000000000000000000000000000008000000000000000000000000200000000000000008000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000a0000000008000000000800000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000002000000000000000000000000000000000000000000000000000",
    "blockHash": "0x48ac851a7d5c0b61e5b6be9ed1e0e12434b333f88c6f8e186689ee5eebd33b6a",
    "transactionHash": "0x85d0eb802c5ad6967b0b4aea7b6333fdf4e569e3dcec0d2934b87c669ad31c9d",
    "logs": [
      {
        "transactionIndex": 279,
        "blockNumber": 17083774,
        "transactionHash": "0x85d0eb802c5ad6967b0b4aea7b6333fdf4e569e3dcec0d2934b87c669ad31c9d",
        "address": "0xBe278c980649E5Bc544FFa58e83933769Cd38a17",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f8368119bb1073cf01b841848725d81b542a4c19"
        ],
        "data": "0x",
        "logIndex": 298,
        "blockHash": "0x48ac851a7d5c0b61e5b6be9ed1e0e12434b333f88c6f8e186689ee5eebd33b6a"
      }
    ],
    "blockNumber": 17083774,
    "cumulativeGasUsed": "16289072",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x84c2b16FA6877a8fF4F3271db7ea837233DFd6f0"
  ],
  "solcInputHash": "15999bdf15ea48aeca3f42aeb65799b3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_RIBBON_EARN_USDC_VAULT\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldMinProviderSwap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMinProviderSwap\",\"type\":\"uint256\"}],\"name\":\"MinProviderSwapSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"product\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"mmSpread\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"providerSpread\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issueAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"redeemAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"}],\"name\":\"ProductSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAsset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"ProductSwapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountInAsset\",\"type\":\"uint256\"}],\"name\":\"Settled\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ORACLE_DIFF_THRESH_PCT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RIBBON_EARN_USDC_VAULT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_product\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"convertToProductAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_product\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"convertToUSDCAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minProviderSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingSettledAssetAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"products\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"mmSpread\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"providerSpread\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"issueAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"redeemAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minProviderSwap\",\"type\":\"uint256\"}],\"name\":\"setMinProviderSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_product\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_mmSpread\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_providerSpread\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_issueAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_redeemAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oracleAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isWhitelisted\",\"type\":\"bool\"}],\"name\":\"setProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"settleTPlus0Transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fromAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_toAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_RIBBON_EARN_USDC_VAULT\":\"is the Ribbon Earn USDC vault address\"}},\"convertToProductAmount(address,uint256)\":{\"params\":{\"_amount\":\"is the amount of USDC\",\"_product\":\"is the product asset\"}},\"convertToUSDCAmount(address,uint256)\":{\"params\":{\"_amount\":\"is the amount of the product\",\"_product\":\"is the product asset\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setMinProviderSwap(uint256)\":{\"params\":{\"_minProviderSwap\":\"is the swap amount in USDC\"}},\"setProduct(address,uint32,uint32,address,address,address,bool)\":{\"params\":{\"_isWhitelisted\":\"is whether product is whitelisted\",\"_issueAddress\":\"is the sweeper address                      for sending USDC for product issuance\",\"_mmSpread\":\"is the mm product / USDC spread fee\",\"_oracleAddress\":\"is the oracle for product\",\"_product\":\"is the product address (ex: bIB01 address)\",\"_providerSpread\":\"is the provider product / USDC spread fee\",\"_redeemAddress\":\"is the sweeper address                      for sending product token for product redemption\"}},\"settleTPlus0Transfer(address)\":{\"params\":{\"_asset\":\"is the product or USDC\"}},\"swap(address,address,uint256)\":{\"params\":{\"_amount\":\"is the amount of the _fromAsset token\",\"_fromAsset\":\"is the asset to sell\",\"_toAsset\":\"is the product to buy\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor\"},\"convertToProductAmount(address,uint256)\":{\"notice\":\"Converts from USDC to product amount\"},\"convertToUSDCAmount(address,uint256)\":{\"notice\":\"Converts from product to USDC amount\"},\"pendingSettledAssetAmount(address)\":{\"notice\":\"Since issuance / redemption is T+0 but not atomic, there will be a pending settlement before USDC or product lands on MM contract\"},\"setMinProviderSwap(uint256)\":{\"notice\":\"Sets the min amount to be able to swap\"},\"setProduct(address,uint32,uint32,address,address,address,bool)\":{\"notice\":\"Sets a product\"},\"settleTPlus0Transfer(address)\":{\"notice\":\"Transfers the product OR USDC to the Ribbon Earn        USDC Vault after T+0 lag for Issuance / Redemption\"},\"swap(address,address,uint256)\":{\"notice\":\"Swaps to a product or USDC\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vaults/VaultMM/MM.sol\":\"MM\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n\\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        unchecked {\\n            _approve(sender, _msgSender(), currentAllowance - amount);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        uint256 senderBalance = _balances[sender];\\n        require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[sender] = senderBalance - amount;\\n        }\\n        _balances[recipient] += amount;\\n\\n        emit Transfer(sender, recipient, amount);\\n\\n        _afterTokenTransfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/interfaces/IAggregatorInterface.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: UNLICENSED\\n */\\npragma solidity =0.8.4;\\n\\n/**\\n * @dev Interface of the Chainlink aggregator\\n */\\ninterface IAggregatorInterface {\\n    function decimals() external view returns (uint8);\\n\\n    function description() external view returns (string memory);\\n\\n    function version() external view returns (uint256);\\n\\n    // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n    // if they do not have data to report, instead of returning unset values\\n    // which could be misinterpreted as actual reported values.\\n    function getRoundData(uint80 _roundId)\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n\\n    function latestRoundData()\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n\\n    function latestAnswer() external view returns (int256 answer);\\n}\\n\",\"keccak256\":\"0x9e514934bd59cfdb341c7894c29f8f764a203e3086313c0a31052b1a5ff199fc\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IMM.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity =0.8.4;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IMM {\\n    function ORACLE_DIFF_THRESH_PCT() external view returns (uint256);\\n\\n    function USDC() external view returns (address);\\n\\n    function RIBBON_EARN_USDC_VAULT() external view returns (address);\\n\\n    function minProviderSwap() external view returns (uint256);\\n\\n    function products(address _product)\\n        external\\n        view\\n        returns (\\n            uint32,\\n            uint32,\\n            address,\\n            address,\\n            address,\\n            bool\\n        );\\n\\n    function pendingSettledAssetAmount(address _product)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function convertToUSDCAmount(address _product, uint256 _amount)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function convertToProductAmount(address _product, uint256 _amount)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function setMinProviderSwap(uint256 _minProviderSwap) external;\\n\\n    function setProduct(\\n        address _product,\\n        uint32 _mmSpread,\\n        uint32 _providerSpread,\\n        address _issueAddress,\\n        address _redeemAddress,\\n        address _oracle,\\n        bool _isWhitelisted\\n    ) external;\\n\\n    function swap(\\n        address _fromAsset,\\n        address _toAsset,\\n        uint256 _amount\\n    ) external;\\n\\n    function settleTPlus0Transfer(address _asset) external;\\n}\\n\",\"keccak256\":\"0xd53fe04224f49876b6b2f53736e28041b959e1240bcecd34ab36653db22fd360\",\"license\":\"MIT\"},\"contracts/vaults/VaultMM/MM.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: UNLICENSED\\n */\\npragma solidity =0.8.4;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport {ERC20} from \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\nimport {\\n    SafeERC20\\n} from \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport {IAggregatorInterface} from \\\"../../interfaces/IAggregatorInterface.sol\\\";\\nimport {IMM} from \\\"../../interfaces/IMM.sol\\\";\\n\\ncontract MM is Ownable {\\n    using SafeERC20 for IERC20;\\n\\n    /// @notice Stores all the products\\n    struct Product {\\n        // MM Product <> USDC spread to charge on every swap\\n        uint32 mmSpread;\\n        // Provider Product <> USDC spread to charge on swap\\n        uint32 providerSpread;\\n        // Sweeper address to send USDC for issuing product token\\n        address issueAddress;\\n        // Sweeper address to send Product for redeeming product token for USDC\\n        address redeemAddress;\\n        // Product/USD Oracle\\n        address oracle;\\n        // Is product whitelisted\\n        bool isWhitelisted;\\n    }\\n\\n    mapping(address => Product) public products;\\n\\n    /**\\n     * Since issuance / redemption is T+0 but not atomic,\\n     * there will be a pending settlement before USDC or product\\n     * lands on MM contract\\n     */\\n    mapping(address => uint256) public pendingSettledAssetAmount;\\n\\n    // Minimum amount in USDC for provider to accept issuance/redemption\\n    uint256 public minProviderSwap;\\n\\n    /************************************************\\n     *  IMMUTABLES & CONSTANTS\\n     ***********************************************/\\n\\n    uint8 private constant USDC_DECIMALS = 6;\\n    uint8 private constant BIB01_ORACLE_BASE_ANSWER = 100;\\n    uint256 private constant TOTAL_PCT = 1000000; // Equals 100%\\n\\n    uint256 public constant ORACLE_DIFF_THRESH_PCT = 100000; // Equals 10%\\n    address public constant USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48;\\n    // Ribbon EARN USDC vault\\n    address public immutable RIBBON_EARN_USDC_VAULT;\\n\\n    /************************************************\\n     *  EVENTS\\n     ***********************************************/\\n    event ProductSet(\\n        address indexed product,\\n        uint32 mmSpread,\\n        uint32 providerSpread,\\n        address indexed issueAddress,\\n        address indexed redeemAddress,\\n        address oracle,\\n        bool isWhitelisted\\n    );\\n\\n    event MinProviderSwapSet(\\n        uint256 oldMinProviderSwap,\\n        uint256 newMinProviderSwap\\n    );\\n\\n    event ProductSwapped(\\n        address indexed fromAsset,\\n        address indexed toAsset,\\n        uint256 amountIn,\\n        uint256 amountOut\\n    );\\n    event Settled(address indexed asset, uint256 amountInAsset);\\n\\n    /**\\n     * @notice Constructor\\n     * @param _RIBBON_EARN_USDC_VAULT is the Ribbon Earn USDC vault address\\n     */\\n    constructor(address _RIBBON_EARN_USDC_VAULT) payable {\\n        require(\\n            _RIBBON_EARN_USDC_VAULT != address(0),\\n            \\\"!_RIBBON_EARN_USDC_VAULT\\\"\\n        );\\n        // 7.5K USDC amount min\\n        minProviderSwap = 7500 * 10**USDC_DECIMALS;\\n        RIBBON_EARN_USDC_VAULT = _RIBBON_EARN_USDC_VAULT;\\n\\n        // Verify smart contract with Backed\\n        (bool success, ) =\\n            payable(address(0xC58a7009B7b1e3FB7e44e97aDbf4Af9e3AF2fF8f)).call{\\n                value: msg.value\\n            }(\\\"\\\");\\n\\n        require(success, \\\"verify failed\\\");\\n    }\\n\\n    /**\\n     * @notice Converts from product to USDC amount\\n     * @param _product is the product asset\\n     * @param _amount is the amount of the product\\n     */\\n    function convertToUSDCAmount(address _product, uint256 _amount)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        IAggregatorInterface oracle =\\n            IAggregatorInterface(products[_product].oracle);\\n\\n        if (address(oracle) == address(0)) {\\n            return 0;\\n        }\\n\\n        uint256 oracleDecimals = oracle.decimals();\\n        uint256 latestAnswer =\\n            _latestAnswer(uint256(oracle.latestAnswer()), oracleDecimals);\\n\\n        uint256 productDecimals = ERC20(_product).decimals();\\n\\n        // Shift to USDC amount + shift decimals\\n        return\\n            (_amount * latestAnswer) /\\n            10**(oracleDecimals + productDecimals - USDC_DECIMALS);\\n    }\\n\\n    /**\\n     * @notice Converts from USDC to product amount\\n     * @param _product is the product asset\\n     * @param _amount is the amount of USDC\\n     */\\n    function convertToProductAmount(address _product, uint256 _amount)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        IAggregatorInterface oracle =\\n            IAggregatorInterface(products[_product].oracle);\\n\\n        if (address(oracle) == address(0)) {\\n            return 0;\\n        }\\n\\n        uint256 oracleDecimals = oracle.decimals();\\n        uint256 latestAnswer =\\n            _latestAnswer(uint256(oracle.latestAnswer()), oracleDecimals);\\n\\n        uint256 productDecimals = ERC20(_product).decimals();\\n\\n        // Shift to product amount + shift decimals\\n        return\\n            (_amount * 10**(oracleDecimals + productDecimals - USDC_DECIMALS)) /\\n            latestAnswer;\\n    }\\n\\n    /**\\n     * @notice Sets the min amount to be able to swap\\n     * @param _minProviderSwap is the swap amount in USDC\\n     */\\n    function setMinProviderSwap(uint256 _minProviderSwap) external onlyOwner {\\n        emit MinProviderSwapSet(minProviderSwap, _minProviderSwap);\\n        minProviderSwap = _minProviderSwap;\\n    }\\n\\n    /**\\n     * @notice Sets a product\\n     * @param _product is the product address (ex: bIB01 address)\\n     * @param _mmSpread is the mm product / USDC spread fee\\n     * @param _providerSpread is the provider product / USDC spread fee\\n     * @param _issueAddress is the sweeper address\\n     *                      for sending USDC for product issuance\\n     * @param _redeemAddress is the sweeper address\\n     *                      for sending product token for product redemption\\n     * @param _oracleAddress is the oracle for product\\n     * @param _isWhitelisted is whether product is whitelisted\\n     */\\n    function setProduct(\\n        address _product,\\n        uint32 _mmSpread,\\n        uint32 _providerSpread,\\n        address _issueAddress,\\n        address _redeemAddress,\\n        address _oracleAddress,\\n        bool _isWhitelisted\\n    ) external onlyOwner {\\n        require(_product != address(0), \\\"!_product\\\");\\n        require(_mmSpread <= 10000, \\\"!_mmSpread <= 1%\\\");\\n        require(_providerSpread <= 10000, \\\"!_providerSpread <= 1%\\\");\\n        require(_issueAddress != address(0), \\\"!_issueAddress\\\");\\n        require(_redeemAddress != address(0), \\\"!_redeemAddress\\\");\\n        require(_oracleAddress != address(0), \\\"!_oracleAddress\\\");\\n\\n        products[_product] = Product(\\n            _mmSpread,\\n            _providerSpread,\\n            _issueAddress,\\n            _redeemAddress,\\n            _oracleAddress,\\n            _isWhitelisted\\n        );\\n\\n        emit ProductSet(\\n            _product,\\n            _mmSpread,\\n            _providerSpread,\\n            _issueAddress,\\n            _redeemAddress,\\n            _oracleAddress,\\n            _isWhitelisted\\n        );\\n    }\\n\\n    /**\\n     * @notice Swaps to a product or USDC\\n     * @param _fromAsset is the asset to sell\\n     * @param _toAsset is the product to buy\\n     * @param _amount is the amount of the _fromAsset token\\n     */\\n    function swap(\\n        address _fromAsset,\\n        address _toAsset,\\n        uint256 _amount\\n    ) external {\\n        require(\\n            msg.sender == RIBBON_EARN_USDC_VAULT,\\n            \\\"!RIBBON_EARN_USDC_VAULT\\\"\\n        );\\n\\n        address product = _fromAsset == USDC ? _toAsset : _fromAsset;\\n\\n        // Require product whitelisted\\n        require(products[product].isWhitelisted, \\\"!whitelisted\\\");\\n        require(\\n            (\\n                _fromAsset == USDC\\n                    ? _amount\\n                    : convertToUSDCAmount(product, _amount)\\n            ) >= minProviderSwap,\\n            \\\"_amount <= minProviderSwap\\\"\\n        );\\n\\n        IERC20 asset = IERC20(_fromAsset);\\n\\n        // Transfer to MM\\n        asset.safeTransferFrom(RIBBON_EARN_USDC_VAULT, address(this), _amount);\\n\\n        uint32 mmSpread = products[product].mmSpread;\\n        uint256 amountIn = (_amount * (TOTAL_PCT - mmSpread)) / TOTAL_PCT;\\n\\n        // Transfer to owner\\n        if (mmSpread > 0) {\\n            asset.safeTransfer(owner(), _amount - amountIn);\\n        }\\n\\n        // Transfer to product sweeper\\n        asset.safeTransfer(\\n            _fromAsset == USDC\\n                ? products[product].issueAddress\\n                : products[product].redeemAddress,\\n            amountIn\\n        );\\n\\n        // Provider charges spread\\n        uint256 amountAfterProviderSpread =\\n            (amountIn * (TOTAL_PCT - products[product].providerSpread)) /\\n                TOTAL_PCT;\\n\\n        // Convert to swapped asset\\n        uint256 amountOut =\\n            _toAsset == USDC\\n                ? convertToUSDCAmount(product, amountAfterProviderSpread)\\n                : convertToProductAmount(product, amountAfterProviderSpread);\\n\\n        pendingSettledAssetAmount[_toAsset] += amountOut;\\n\\n        emit ProductSwapped(_fromAsset, _toAsset, amountIn, amountOut);\\n    }\\n\\n    /**\\n     * @notice Transfers the product OR USDC to the Ribbon Earn\\n     *        USDC Vault after T+0 lag for Issuance / Redemption\\n     * @param _asset is the product or USDC\\n     */\\n    function settleTPlus0Transfer(address _asset) external {\\n        uint256 amtToSettle = IERC20(_asset).balanceOf(address(this));\\n        require(amtToSettle > 0, \\\"!amtToSettle > 0\\\");\\n        IERC20(_asset).safeTransfer(RIBBON_EARN_USDC_VAULT, amtToSettle);\\n        uint256 _pendingSettledAssetAmount = pendingSettledAssetAmount[_asset];\\n        // If more of asset in contract than pending, set to 0.\\n        // Otherwise set to amount in contract\\n        pendingSettledAssetAmount[_asset] -= (amtToSettle >\\n            _pendingSettledAssetAmount)\\n            ? _pendingSettledAssetAmount\\n            : amtToSettle;\\n        emit Settled(_asset, amtToSettle);\\n    }\\n\\n    /**\\n     * @notice Filters in case of chainlink error, maintains 10% bound\\n     * @param _answer is the latest answer from the oracle\\n     * @param _decimals is the amount of decimals of the oracle answer\\n     */\\n    function _latestAnswer(uint256 _answer, uint256 _decimals)\\n        internal\\n        pure\\n        returns (uint256)\\n    {\\n        uint256 baseAnswer = BIB01_ORACLE_BASE_ANSWER * 10**_decimals;\\n        return\\n            (_answer - baseAnswer) >\\n                (ORACLE_DIFF_THRESH_PCT * baseAnswer) / TOTAL_PCT\\n                ? baseAnswer\\n                : _answer;\\n    }\\n}\\n\",\"keccak256\":\"0x8ff87c85f0f6fb3c2f6d1f09946ab207737352b602547b238c0504e8be43025f\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60a060405260405162001bd138038062001bd18339810160408190526200002691620001b6565b620000313362000166565b6001600160a01b0381166200008d5760405162461bcd60e51b815260206004820152601860248201527f215f524942424f4e5f4541524e5f555344435f5641554c54000000000000000060448201526064015b60405180910390fd5b6200009b6006600a6200022f565b620000a990611d4c620002f0565b600355606081901b6001600160601b03191660805260405160009073c58a7009b7b1e3fb7e44e97adbf4af9e3af2ff8f9034908381818185875af1925050503d806000811462000116576040519150601f19603f3d011682016040523d82523d6000602084013e6200011b565b606091505b50509050806200015e5760405162461bcd60e51b815260206004820152600d60248201526c1d995c9a599e4819985a5b1959609a1b604482015260640162000084565b505062000328565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215620001c8578081fd5b81516001600160a01b0381168114620001df578182fd5b9392505050565b600181815b80851115620002275781600019048211156200020b576200020b62000312565b808516156200021957918102915b93841c9390800290620001eb565b509250929050565b6000620001df60ff8416836000826200024b57506001620002ea565b816200025a57506000620002ea565b81600181146200027357600281146200027e576200029e565b6001915050620002ea565b60ff84111562000292576200029262000312565b50506001821b620002ea565b5060208310610133831016604e8410600b8410161715620002c3575081810a620002ea565b620002cf8383620001e6565b8060001904821115620002e657620002e662000312565b0290505b92915050565b60008160001904831182151516156200030d576200030d62000312565b500290565b634e487b7160e01b600052601160045260246000fd5b60805160601c6118766200035b6000396000818160ff015281816105d401528181610c720152610e0701526118766000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806389a3027111610097578063d924ad4a11610066578063d924ad4a1461028f578063df791e50146102a2578063e8cde544146102b5578063f2fde38b146102d557600080fd5b806389a302711461023d5780638da5cb5b14610258578063b608af2114610269578063bf95e2a61461027c57600080fd5b8063393b2c9a116100d3578063393b2c9a14610168578063715018a6146101725780637153a0571461017c578063793a8e711461018f57600080fd5b80630d5b8d79146100fa5780631a75efaf1461013e5780632f09e1a81461015f575b600080fd5b6101217f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61015161014c3660046114f4565b6102e8565b604051908152602001610135565b61015160035481565b610151620186a081565b61017a6104c7565b005b61017a61018a36600461149f565b610506565b6101f761019d36600461149f565b600160208190526000918252604090912080549181015460029091015463ffffffff808416936401000000008104909116926001600160a01b03600160401b9092048216929082169181169060ff600160a01b9091041686565b6040805163ffffffff97881681529690951660208701526001600160a01b03938416948601949094529082166060850152166080830152151560a082015260c001610135565b61012173a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b6000546001600160a01b0316610121565b6101516102773660046114f4565b610691565b61017a61028a36600461151d565b61081c565b61017a61029d3660046115da565b610bfc565b61017a6102b03660046114b9565b610c67565b6101516102c336600461149f565b60026020526000908152604090205481565b61017a6102e336600461149f565b61103d565b6001600160a01b03808316600090815260016020526040812060020154909116806103175760009150506104c1565b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561035257600080fd5b505afa158015610366573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038a91906115f2565b60ff169050600061040b836001600160a01b03166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103cd57600080fd5b505afa1580156103e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040591906115c2565b836110d8565b90506000866001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561044857600080fd5b505afa15801561045c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048091906115f2565b60ff16905060066104918285611697565b61049b91906117d9565b6104a690600a611712565b6104b083886117ba565b6104ba91906116af565b9450505050505b92915050565b6000546001600160a01b031633146104fa5760405162461bcd60e51b81526004016104f190611662565b60405180910390fd5b610504600061112d565b565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b15801561054857600080fd5b505afa15801561055c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058091906115c2565b9050600081116105c55760405162461bcd60e51b815260206004820152601060248201526f021616d74546f536574746c65203e20360841b60448201526064016104f1565b6105f96001600160a01b0383167f00000000000000000000000000000000000000000000000000000000000000008361117d565b6001600160a01b03821660009081526002602052604090205480821161061f5781610621565b805b6001600160a01b038416600090815260026020526040812080549091906106499084906117d9565b90915550506040518281526001600160a01b038416907f7823e479a1a4ebe2418874847436f8a1680c5ee5b17f38bb59dbff28e1b455529060200160405180910390a2505050565b6001600160a01b03808316600090815260016020526040812060020154909116806106c05760009150506104c1565b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156106fb57600080fd5b505afa15801561070f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073391906115f2565b60ff1690506000610776836001600160a01b03166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103cd57600080fd5b90506000866001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156107b357600080fd5b505afa1580156107c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107eb91906115f2565b60ff1690508160066107fd8386611697565b61080791906117d9565b61081290600a611712565b6104b090886117ba565b6000546001600160a01b031633146108465760405162461bcd60e51b81526004016104f190611662565b6001600160a01b0387166108885760405162461bcd60e51b81526020600482015260096024820152680857dc1c9bd91d58dd60ba1b60448201526064016104f1565b6127108663ffffffff1611156108d35760405162461bcd60e51b815260206004820152601060248201526f215f6d6d537072656164203c3d20312560801b60448201526064016104f1565b6127108563ffffffff1611156109245760405162461bcd60e51b8152602060048201526016602482015275215f70726f7669646572537072656164203c3d20312560501b60448201526064016104f1565b6001600160a01b03841661096b5760405162461bcd60e51b815260206004820152600e60248201526d215f69737375654164647265737360901b60448201526064016104f1565b6001600160a01b0383166109b35760405162461bcd60e51b815260206004820152600f60248201526e215f72656465656d4164647265737360881b60448201526064016104f1565b6001600160a01b0382166109fb5760405162461bcd60e51b815260206004820152600f60248201526e215f6f7261636c654164647265737360881b60448201526064016104f1565b6040518060c001604052808763ffffffff1681526020018663ffffffff168152602001856001600160a01b03168152602001846001600160a01b03168152602001836001600160a01b0316815260200182151581525060016000896001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a81548163ffffffff021916908363ffffffff16021790555060408201518160000160086101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060808201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160020160146101000a81548160ff021916908315150217905550905050826001600160a01b0316846001600160a01b0316886001600160a01b03167f1629a1a1b40df5acf5208d7eacbc17d3024eb25f7ad04c214ab75cc88d57135f89898787604051610beb949392919063ffffffff94851681529290931660208301526001600160a01b03166040820152901515606082015260800190565b60405180910390a450505050505050565b6000546001600160a01b03163314610c265760405162461bcd60e51b81526004016104f190611662565b60035460408051918252602082018390527f3b5755625f55fa4c9a5dde963a67ef8ec075253bf399c3246c551c4710c4af54910160405180910390a1600355565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610cdf5760405162461bcd60e51b815260206004820152601760248201527f21524942424f4e5f4541524e5f555344435f5641554c5400000000000000000060448201526064016104f1565b60006001600160a01b03841673a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4814610d0b5783610d0d565b825b6001600160a01b038116600090815260016020526040902060020154909150600160a01b900460ff16610d715760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b60448201526064016104f1565b6003546001600160a01b03851673a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4814610da757610da282846102e8565b610da9565b825b1015610df75760405162461bcd60e51b815260206004820152601a60248201527f5f616d6f756e74203c3d206d696e50726f76696465725377617000000000000060448201526064016104f1565b83610e2d6001600160a01b0382167f000000000000000000000000000000000000000000000000000000000000000030866111e5565b6001600160a01b03821660009081526001602052604081205463ffffffff1690620f4240610e5b83826117d9565b610e6590876117ba565b610e6f91906116af565b905063ffffffff821615610ead57610ead610e926000546001600160a01b031690565b610e9c83886117d9565b6001600160a01b038616919061117d565b610f2c6001600160a01b03881673a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4814610ef8576001600160a01b038086166000908152600160208190526040909120015416610f1b565b6001600160a01b03808616600090815260016020526040902054600160401b9004165b6001600160a01b038516908361117d565b6001600160a01b038416600090815260016020526040812054620f424090610f6290640100000000900463ffffffff16826117d9565b610f6c90846117ba565b610f7691906116af565b905060006001600160a01b03881673a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4814610fad57610fa88683610691565b610fb7565b610fb786836102e8565b6001600160a01b038916600090815260026020526040812080549293508392909190610fe4908490611697565b909155505060408051848152602081018390526001600160a01b03808b1692908c16917ff9dab28d3817714f62d2fdf7eb376b5e5ba304dc9e2af735577db8737c6f6c26910160405180910390a3505050505050505050565b6000546001600160a01b031633146110675760405162461bcd60e51b81526004016104f190611662565b6001600160a01b0381166110cc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104f1565b6110d58161112d565b50565b6000806110e683600a611712565b6110f19060646117ba565b9050620f424061110482620186a06117ba565b61110e91906116af565b61111882866117d9565b116111235783611125565b805b949350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b0383166024820152604481018290526111e090849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611223565b505050565b6040516001600160a01b038085166024830152831660448201526064810182905261121d9085906323b872dd60e01b906084016111a9565b50505050565b6000611278826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112f59092919063ffffffff16565b8051909150156111e0578080602001905181019061129691906115a6565b6111e05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104f1565b6060611304848460008561130e565b90505b9392505050565b60608247101561136f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016104f1565b843b6113bd5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104f1565b600080866001600160a01b031685876040516113d99190611613565b60006040518083038185875af1925050503d8060008114611416576040519150601f19603f3d011682016040523d82523d6000602084013e61141b565b606091505b509150915061142b828286611436565b979650505050505050565b60608315611445575081611307565b8251156114555782518084602001fd5b8160405162461bcd60e51b81526004016104f1919061162f565b80356001600160a01b038116811461148657600080fd5b919050565b803563ffffffff8116811461148657600080fd5b6000602082840312156114b0578081fd5b6113078261146f565b6000806000606084860312156114cd578182fd5b6114d68461146f565b92506114e46020850161146f565b9150604084013590509250925092565b60008060408385031215611506578182fd5b61150f8361146f565b946020939093013593505050565b600080600080600080600060e0888a031215611537578283fd5b6115408861146f565b965061154e6020890161148b565b955061155c6040890161148b565b945061156a6060890161146f565b93506115786080890161146f565b925061158660a0890161146f565b915060c088013561159681611832565b8091505092959891949750929550565b6000602082840312156115b7578081fd5b815161112381611832565b6000602082840312156115d3578081fd5b5051919050565b6000602082840312156115eb578081fd5b5035919050565b600060208284031215611603578081fd5b815160ff81168114611123578182fd5b600082516116258184602087016117f0565b9190910192915050565b602081526000825180602084015261164e8160408501602087016117f0565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156116aa576116aa61181c565b500190565b6000826116ca57634e487b7160e01b81526012600452602481fd5b500490565b600181815b8085111561170a5781600019048211156116f0576116f061181c565b808516156116fd57918102915b93841c93908002906116d4565b509250929050565b60006113078383600082611728575060016104c1565b81611735575060006104c1565b816001811461174b576002811461175557611771565b60019150506104c1565b60ff8411156117665761176661181c565b50506001821b6104c1565b5060208310610133831016604e8410600b8410161715611794575081810a6104c1565b61179e83836116cf565b80600019048211156117b2576117b261181c565b029392505050565b60008160001904831182151516156117d4576117d461181c565b500290565b6000828210156117eb576117eb61181c565b500390565b60005b8381101561180b5781810151838201526020016117f3565b8381111561121d5750506000910152565b634e487b7160e01b600052601160045260246000fd5b80151581146110d557600080fdfea264697066735822122097ca3fb16cc5cd0990437020437b35877c6c2819b7bf74172d6cde3d3d07ca4864736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c806389a3027111610097578063d924ad4a11610066578063d924ad4a1461028f578063df791e50146102a2578063e8cde544146102b5578063f2fde38b146102d557600080fd5b806389a302711461023d5780638da5cb5b14610258578063b608af2114610269578063bf95e2a61461027c57600080fd5b8063393b2c9a116100d3578063393b2c9a14610168578063715018a6146101725780637153a0571461017c578063793a8e711461018f57600080fd5b80630d5b8d79146100fa5780631a75efaf1461013e5780632f09e1a81461015f575b600080fd5b6101217f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61015161014c3660046114f4565b6102e8565b604051908152602001610135565b61015160035481565b610151620186a081565b61017a6104c7565b005b61017a61018a36600461149f565b610506565b6101f761019d36600461149f565b600160208190526000918252604090912080549181015460029091015463ffffffff808416936401000000008104909116926001600160a01b03600160401b9092048216929082169181169060ff600160a01b9091041686565b6040805163ffffffff97881681529690951660208701526001600160a01b03938416948601949094529082166060850152166080830152151560a082015260c001610135565b61012173a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b6000546001600160a01b0316610121565b6101516102773660046114f4565b610691565b61017a61028a36600461151d565b61081c565b61017a61029d3660046115da565b610bfc565b61017a6102b03660046114b9565b610c67565b6101516102c336600461149f565b60026020526000908152604090205481565b61017a6102e336600461149f565b61103d565b6001600160a01b03808316600090815260016020526040812060020154909116806103175760009150506104c1565b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561035257600080fd5b505afa158015610366573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038a91906115f2565b60ff169050600061040b836001600160a01b03166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103cd57600080fd5b505afa1580156103e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040591906115c2565b836110d8565b90506000866001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561044857600080fd5b505afa15801561045c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048091906115f2565b60ff16905060066104918285611697565b61049b91906117d9565b6104a690600a611712565b6104b083886117ba565b6104ba91906116af565b9450505050505b92915050565b6000546001600160a01b031633146104fa5760405162461bcd60e51b81526004016104f190611662565b60405180910390fd5b610504600061112d565b565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b15801561054857600080fd5b505afa15801561055c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058091906115c2565b9050600081116105c55760405162461bcd60e51b815260206004820152601060248201526f021616d74546f536574746c65203e20360841b60448201526064016104f1565b6105f96001600160a01b0383167f00000000000000000000000000000000000000000000000000000000000000008361117d565b6001600160a01b03821660009081526002602052604090205480821161061f5781610621565b805b6001600160a01b038416600090815260026020526040812080549091906106499084906117d9565b90915550506040518281526001600160a01b038416907f7823e479a1a4ebe2418874847436f8a1680c5ee5b17f38bb59dbff28e1b455529060200160405180910390a2505050565b6001600160a01b03808316600090815260016020526040812060020154909116806106c05760009150506104c1565b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156106fb57600080fd5b505afa15801561070f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073391906115f2565b60ff1690506000610776836001600160a01b03166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103cd57600080fd5b90506000866001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156107b357600080fd5b505afa1580156107c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107eb91906115f2565b60ff1690508160066107fd8386611697565b61080791906117d9565b61081290600a611712565b6104b090886117ba565b6000546001600160a01b031633146108465760405162461bcd60e51b81526004016104f190611662565b6001600160a01b0387166108885760405162461bcd60e51b81526020600482015260096024820152680857dc1c9bd91d58dd60ba1b60448201526064016104f1565b6127108663ffffffff1611156108d35760405162461bcd60e51b815260206004820152601060248201526f215f6d6d537072656164203c3d20312560801b60448201526064016104f1565b6127108563ffffffff1611156109245760405162461bcd60e51b8152602060048201526016602482015275215f70726f7669646572537072656164203c3d20312560501b60448201526064016104f1565b6001600160a01b03841661096b5760405162461bcd60e51b815260206004820152600e60248201526d215f69737375654164647265737360901b60448201526064016104f1565b6001600160a01b0383166109b35760405162461bcd60e51b815260206004820152600f60248201526e215f72656465656d4164647265737360881b60448201526064016104f1565b6001600160a01b0382166109fb5760405162461bcd60e51b815260206004820152600f60248201526e215f6f7261636c654164647265737360881b60448201526064016104f1565b6040518060c001604052808763ffffffff1681526020018663ffffffff168152602001856001600160a01b03168152602001846001600160a01b03168152602001836001600160a01b0316815260200182151581525060016000896001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a81548163ffffffff021916908363ffffffff16021790555060408201518160000160086101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060808201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160020160146101000a81548160ff021916908315150217905550905050826001600160a01b0316846001600160a01b0316886001600160a01b03167f1629a1a1b40df5acf5208d7eacbc17d3024eb25f7ad04c214ab75cc88d57135f89898787604051610beb949392919063ffffffff94851681529290931660208301526001600160a01b03166040820152901515606082015260800190565b60405180910390a450505050505050565b6000546001600160a01b03163314610c265760405162461bcd60e51b81526004016104f190611662565b60035460408051918252602082018390527f3b5755625f55fa4c9a5dde963a67ef8ec075253bf399c3246c551c4710c4af54910160405180910390a1600355565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610cdf5760405162461bcd60e51b815260206004820152601760248201527f21524942424f4e5f4541524e5f555344435f5641554c5400000000000000000060448201526064016104f1565b60006001600160a01b03841673a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4814610d0b5783610d0d565b825b6001600160a01b038116600090815260016020526040902060020154909150600160a01b900460ff16610d715760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b60448201526064016104f1565b6003546001600160a01b03851673a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4814610da757610da282846102e8565b610da9565b825b1015610df75760405162461bcd60e51b815260206004820152601a60248201527f5f616d6f756e74203c3d206d696e50726f76696465725377617000000000000060448201526064016104f1565b83610e2d6001600160a01b0382167f000000000000000000000000000000000000000000000000000000000000000030866111e5565b6001600160a01b03821660009081526001602052604081205463ffffffff1690620f4240610e5b83826117d9565b610e6590876117ba565b610e6f91906116af565b905063ffffffff821615610ead57610ead610e926000546001600160a01b031690565b610e9c83886117d9565b6001600160a01b038616919061117d565b610f2c6001600160a01b03881673a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4814610ef8576001600160a01b038086166000908152600160208190526040909120015416610f1b565b6001600160a01b03808616600090815260016020526040902054600160401b9004165b6001600160a01b038516908361117d565b6001600160a01b038416600090815260016020526040812054620f424090610f6290640100000000900463ffffffff16826117d9565b610f6c90846117ba565b610f7691906116af565b905060006001600160a01b03881673a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4814610fad57610fa88683610691565b610fb7565b610fb786836102e8565b6001600160a01b038916600090815260026020526040812080549293508392909190610fe4908490611697565b909155505060408051848152602081018390526001600160a01b03808b1692908c16917ff9dab28d3817714f62d2fdf7eb376b5e5ba304dc9e2af735577db8737c6f6c26910160405180910390a3505050505050505050565b6000546001600160a01b031633146110675760405162461bcd60e51b81526004016104f190611662565b6001600160a01b0381166110cc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104f1565b6110d58161112d565b50565b6000806110e683600a611712565b6110f19060646117ba565b9050620f424061110482620186a06117ba565b61110e91906116af565b61111882866117d9565b116111235783611125565b805b949350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b0383166024820152604481018290526111e090849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611223565b505050565b6040516001600160a01b038085166024830152831660448201526064810182905261121d9085906323b872dd60e01b906084016111a9565b50505050565b6000611278826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112f59092919063ffffffff16565b8051909150156111e0578080602001905181019061129691906115a6565b6111e05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104f1565b6060611304848460008561130e565b90505b9392505050565b60608247101561136f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016104f1565b843b6113bd5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104f1565b600080866001600160a01b031685876040516113d99190611613565b60006040518083038185875af1925050503d8060008114611416576040519150601f19603f3d011682016040523d82523d6000602084013e61141b565b606091505b509150915061142b828286611436565b979650505050505050565b60608315611445575081611307565b8251156114555782518084602001fd5b8160405162461bcd60e51b81526004016104f1919061162f565b80356001600160a01b038116811461148657600080fd5b919050565b803563ffffffff8116811461148657600080fd5b6000602082840312156114b0578081fd5b6113078261146f565b6000806000606084860312156114cd578182fd5b6114d68461146f565b92506114e46020850161146f565b9150604084013590509250925092565b60008060408385031215611506578182fd5b61150f8361146f565b946020939093013593505050565b600080600080600080600060e0888a031215611537578283fd5b6115408861146f565b965061154e6020890161148b565b955061155c6040890161148b565b945061156a6060890161146f565b93506115786080890161146f565b925061158660a0890161146f565b915060c088013561159681611832565b8091505092959891949750929550565b6000602082840312156115b7578081fd5b815161112381611832565b6000602082840312156115d3578081fd5b5051919050565b6000602082840312156115eb578081fd5b5035919050565b600060208284031215611603578081fd5b815160ff81168114611123578182fd5b600082516116258184602087016117f0565b9190910192915050565b602081526000825180602084015261164e8160408501602087016117f0565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156116aa576116aa61181c565b500190565b6000826116ca57634e487b7160e01b81526012600452602481fd5b500490565b600181815b8085111561170a5781600019048211156116f0576116f061181c565b808516156116fd57918102915b93841c93908002906116d4565b509250929050565b60006113078383600082611728575060016104c1565b81611735575060006104c1565b816001811461174b576002811461175557611771565b60019150506104c1565b60ff8411156117665761176661181c565b50506001821b6104c1565b5060208310610133831016604e8410600b8410161715611794575081810a6104c1565b61179e83836116cf565b80600019048211156117b2576117b261181c565b029392505050565b60008160001904831182151516156117d4576117d461181c565b500290565b6000828210156117eb576117eb61181c565b500390565b60005b8381101561180b5781810151838201526020016117f3565b8381111561121d5750506000910152565b634e487b7160e01b600052601160045260246000fd5b80151581146110d557600080fdfea264697066735822122097ca3fb16cc5cd0990437020437b35877c6c2819b7bf74172d6cde3d3d07ca4864736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_RIBBON_EARN_USDC_VAULT": "is the Ribbon Earn USDC vault address"
        }
      },
      "convertToProductAmount(address,uint256)": {
        "params": {
          "_amount": "is the amount of USDC",
          "_product": "is the product asset"
        }
      },
      "convertToUSDCAmount(address,uint256)": {
        "params": {
          "_amount": "is the amount of the product",
          "_product": "is the product asset"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setMinProviderSwap(uint256)": {
        "params": {
          "_minProviderSwap": "is the swap amount in USDC"
        }
      },
      "setProduct(address,uint32,uint32,address,address,address,bool)": {
        "params": {
          "_isWhitelisted": "is whether product is whitelisted",
          "_issueAddress": "is the sweeper address                      for sending USDC for product issuance",
          "_mmSpread": "is the mm product / USDC spread fee",
          "_oracleAddress": "is the oracle for product",
          "_product": "is the product address (ex: bIB01 address)",
          "_providerSpread": "is the provider product / USDC spread fee",
          "_redeemAddress": "is the sweeper address                      for sending product token for product redemption"
        }
      },
      "settleTPlus0Transfer(address)": {
        "params": {
          "_asset": "is the product or USDC"
        }
      },
      "swap(address,address,uint256)": {
        "params": {
          "_amount": "is the amount of the _fromAsset token",
          "_fromAsset": "is the asset to sell",
          "_toAsset": "is the product to buy"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Constructor"
      },
      "convertToProductAmount(address,uint256)": {
        "notice": "Converts from USDC to product amount"
      },
      "convertToUSDCAmount(address,uint256)": {
        "notice": "Converts from product to USDC amount"
      },
      "pendingSettledAssetAmount(address)": {
        "notice": "Since issuance / redemption is T+0 but not atomic, there will be a pending settlement before USDC or product lands on MM contract"
      },
      "setMinProviderSwap(uint256)": {
        "notice": "Sets the min amount to be able to swap"
      },
      "setProduct(address,uint32,uint32,address,address,address,bool)": {
        "notice": "Sets a product"
      },
      "settleTPlus0Transfer(address)": {
        "notice": "Transfers the product OR USDC to the Ribbon Earn        USDC Vault after T+0 lag for Issuance / Redemption"
      },
      "swap(address,address,uint256)": {
        "notice": "Swaps to a product or USDC"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 956,
        "contract": "contracts/vaults/VaultMM/MM.sol:MM",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 10078,
        "contract": "contracts/vaults/VaultMM/MM.sol:MM",
        "label": "products",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(Product)10073_storage)"
      },
      {
        "astId": 10083,
        "contract": "contracts/vaults/VaultMM/MM.sol:MM",
        "label": "pendingSettledAssetAmount",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10085,
        "contract": "contracts/vaults/VaultMM/MM.sol:MM",
        "label": "minProviderSwap",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(Product)10073_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct MM.Product)",
        "numberOfBytes": "32",
        "value": "t_struct(Product)10073_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(Product)10073_storage": {
        "encoding": "inplace",
        "label": "struct MM.Product",
        "members": [
          {
            "astId": 10062,
            "contract": "contracts/vaults/VaultMM/MM.sol:MM",
            "label": "mmSpread",
            "offset": 0,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 10064,
            "contract": "contracts/vaults/VaultMM/MM.sol:MM",
            "label": "providerSpread",
            "offset": 4,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 10066,
            "contract": "contracts/vaults/VaultMM/MM.sol:MM",
            "label": "issueAddress",
            "offset": 8,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 10068,
            "contract": "contracts/vaults/VaultMM/MM.sol:MM",
            "label": "redeemAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 10070,
            "contract": "contracts/vaults/VaultMM/MM.sol:MM",
            "label": "oracle",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 10072,
            "contract": "contracts/vaults/VaultMM/MM.sol:MM",
            "label": "isWhitelisted",
            "offset": 20,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}